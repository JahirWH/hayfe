<div class="serious-player-container">
  <div class="serious-frame">
    <!-- <div class="serious-title" id="seriousTitle"></div> -->
    <div class="serious-video-wrapper">
      <video id="videoPlayer" autoplay playsinline></video>
      <div class="serious-controls">
        <button id="soundToggle" aria-label="Toggle sound" class="serious-btn">
          <span id="soundOnIcon" class="hidden">
            <!-- SVG: Sound ON -->
            <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14"></path><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path></svg>
          </span>
          <span id="soundOffIcon">
            <!-- SVG: Sound OFF -->
            <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line></svg>
          </span>
        </button>
        <button id="nextVideo" aria-label="Siguiente video" class="serious-btn">
          <!-- SVG: Next -->
          <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line></svg>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  let videos = [];
  let currentVideoIndex = 0;
  let isMuted = false;
  let isLoading = false;

  document.addEventListener('DOMContentLoaded', () => {
    const videoElement = document.getElementById('videoPlayer');
    const soundToggle = document.getElementById('soundToggle');
    const soundOnIcon = document.getElementById('soundOnIcon');
    const soundOffIcon = document.getElementById('soundOffIcon');
    const nextVideoBtn = document.getElementById('nextVideo');
    const titleElement = document.getElementById('seriousTitle');

    // Cargar videos desde localStorage o JSON por defecto
    async function loadVideos() {
      try {
        const storedVideos = localStorage.getItem('videos');
        if (storedVideos) {
          videos = JSON.parse(storedVideos);
          if (videos.length > 0) {
            playVideo(currentVideoIndex);
            return;
          }
        }
        const response = await fetch('/videos.json');
        videos = await response.json();
        if (videos.length > 0) {
          playVideo(currentVideoIndex);
        }
      } catch (error) {
        showTitle('Error cargando videos');
      }
    }

    // Reproducir video por índice
    function playVideo(index) {
      if (!videos.length || !videoElement) return;
      isLoading = true;
      const video = videos[index];
      videoElement.src = video.url;
      videoElement.load();
      videoElement.play().catch(() => {});
      showTitle(video.title);
    }

    // Mostrar título con animación máquina de escribir
    function showTitle(text) {
      if (!titleElement) return;
      titleElement.textContent = '';
      let i = 0;
      function type() {
        if (i < text.length) {
          titleElement.textContent += text.charAt(i);
          i++;
          setTimeout(type, 40);
        }
      }
      type();
    }

    // Siguiente video
    function playNextVideo() {
      currentVideoIndex = (currentVideoIndex + 1) % videos.length;
      playVideo(currentVideoIndex);
    }

    // Toggle de sonido
    function toggleSound() {
      if (!videoElement || !soundOnIcon || !soundOffIcon) return;
      isMuted = !isMuted;
      videoElement.muted = isMuted;
      soundOnIcon.classList.toggle('hidden', isMuted);
      soundOffIcon.classList.toggle('hidden', !isMuted);
    }

    // Manejo de errores de video
    if (videoElement) {
      videoElement.addEventListener('error', playNextVideo);
      videoElement.addEventListener('ended', playNextVideo);
      videoElement.addEventListener('canplay', () => { isLoading = false; });
    }
    if (soundToggle) soundToggle.addEventListener('click', toggleSound);
    if (nextVideoBtn) nextVideoBtn.addEventListener('click', playNextVideo);

    // Inicializar
    if (videoElement && soundOnIcon && soundOffIcon) {
      videoElement.muted = false;
      isMuted = false;
      soundOnIcon.classList.add('hidden');
      soundOffIcon.classList.remove('hidden');
    }
    loadVideos();
  });
</script>

<style>
:root {
  --serious-bg: #111;
  --serious-border: #232323;
  --serious-font: 'Inter', 'Arial', sans-serif;
  --serious-title: #fff;
  --serious-shadow: 0 2px 32px 0 #000a;
}
.serious-player-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  z-index: 1;
}
.serious-frame {
  background: rgba(20, 20, 20, 0.98);
  border: 1.5px solid var(--serious-border);
  border-radius: 22px;
  box-shadow: var(--serious-shadow);
  padding: 2.5rem 1.5rem 2rem 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 340px;
  max-width: 98vw;
  min-height: 480px;
  max-height: 92vh;
  position: relative;
}
.serious-title {
  font-family: var(--serious-font);
  color: var(--serious-title);
  font-size: 1.25rem;
  letter-spacing: 0.04em;
  margin-bottom: 1.2rem;
  text-align: center;
  min-height: 2.2em;
  user-select: none;
  white-space: pre;
  opacity: 0.92;
}
.serious-video-wrapper {
  position: relative;
  width: 550px;
  height: 500px;
  max-width: 95vw;
  max-height: 80vh;
  aspect-ratio: 4/5;
  background: #000;
  border-radius: 16px;
  box-shadow: 0 2px 32px 0 #000a;
  display: flex;
  align-items: center;
  justify-content: center;
}
video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 14px;
  background: #000;
  box-shadow: none;
}
.serious-controls {
  position: absolute;
  bottom: 18px;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
  gap: 2.5rem;
  z-index: 2;
}
.serious-btn {
  background: rgba(30, 30, 30, 0.85);
  border: 1.5px solid var(--serious-border);
  color: var(--serious-title);
  font-size: 2.1rem;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: none;
  transition: background 0.2s, border 0.2s;
  outline: none;
}
.serious-btn:hover, .serious-btn:focus {
  background: #232323;
  color: #fff;
  border: 1.5px solid #fff2;
}
.serious-btn svg {
  display: block;
}
.hidden {
  display: none;
}
@media (max-width: 600px) {
  .serious-frame {
    min-width: 98vw;
    padding: 1rem 0.2rem 1rem 0.2rem;
  }
  .serious-video-wrapper {
    width: 98vw;
    height: 122vw;
    min-height: 220px;
    max-height: 80vh;
  }
}
</style>